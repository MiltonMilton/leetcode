from typing import List


class Solution:

    def isValidBox(self, row) -> bool:
        numbers = [e for e in row if e != "." ]
        return len(set(numbers)) == len(numbers)

    def getSubBoxes(self, board):
        return  [
            board[0][0:3]+board[1][0:3]+board[2][0:3],
            board[0][3:6] + board[1][3:6] + board[2][3:6],
            board[0][6:9] + board[1][6:9] + board[2][6:9],
            board[3][0:3] + board[4][0:3] + board[5][0:3],
            board[3][3:6] + board[4][3:6] + board[5][3:6],
            board[3][6:9] + board[4][6:9] + board[5][6:9],
            board[6][0:3] + board[7][0:3] + board[8][0:3],
            board[6][3:6] + board[7][3:6] + board[8][3:6],
            board[6][6:9] + board[7][6:9] + board[8][6:9],
        ]
    def getColumns(self, board):
        return [
            board[0][i]+board[1][i]+board[2][i]+board[3][i]+board[4][i]+board[5][i]+board[6][i]+board[7][i]+board[8][i] for i in range(9)
        ]

    def isValidSudoku(self, board: List[List[str]]) -> bool:
        return all(
            [self.isValidBox(row) for row in board] +
            [self.isValidBox(sub_box) for sub_box in self.getSubBoxes(board)] +
            [self.isValidBox(column) for column in self.getColumns(board)]
        )

if __name__ == "__main__":
    s = Solution()
    board1 = [
        ["1","2",".",".","3",".",".",".","."],
         ["4",".",".","5",".",".",".",".","."],
         [".","9","8",".",".",".",".",".","3"],
         ["5",".",".",".","6",".",".",".","4"],
         [".",".",".","8",".","3",".",".","5"],
         ["7",".",".",".","2",".",".",".","6"],
         [".",".",".",".",".",".","2",".","."],
         [".",".",".","4","1","9",".",".","8"],
         [".",".",".",".","8",".",".","7","9"]
    ]
    board2 = [
        ["1","2",".",".","3",".",".",".","."],
        ["4",".",".","5",".",".",".",".","."],
        [".","9","1",".",".",".",".",".","3"],
        ["5",".",".",".","6",".",".",".","4"],
        [".",".",".","8",".","3",".",".","5"],
        ["7",".",".",".","2",".",".",".","6"],
        [".",".",".",".",".",".","2",".","."],
        [".",".",".","4","1","9",".",".","8"],
        [".",".",".",".","8",".",".","7","9"]
    ]
    board3 = [
        [".",".","4",".",".",".","6","3","."],
        [".",".",".",".",".",".",".",".","."],
        ["5",".",".",".",".",".",".","9","."],
        [".",".",".","5","6",".",".",".","."],
        ["4",".","3",".",".",".",".",".","1"],
        [".",".",".","7",".",".",".",".","."],
        [".",".",".","5",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."]
    ]
    print(s.isValidSudoku(board3))